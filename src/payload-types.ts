/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    excursions: Excursion;
    bookings: Booking;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    excursions: ExcursionsSelect<false> | ExcursionsSelect<true>;
    bookings: BookingsSelect<false> | BookingsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * Manage images and media files
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  /**
   * Alt text is important for accessibility and SEO
   */
  alt: string;
  /**
   * Caption text that may be displayed below the image
   */
  caption?: string | null;
  /**
   * Categorize this media for better organization
   */
  category?: ('excursion' | 'location' | 'activity' | 'hero' | 'gallery' | 'graphics' | 'other') | null;
  /**
   * Add tags to help organize and search media files
   */
  tags?: string | null;
  /**
   * Attribution for the image source
   */
  photographer?: string | null;
  /**
   * Geographic location of the image
   */
  location?: string | null;
  /**
   * When was this photo taken?
   */
  dateCreated?: string | null;
  seo?: {
    title?: string | null;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    hero?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    gallery?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * Manage tour excursions and activities
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "excursions".
 */
export interface Excursion {
  id: number;
  title: string;
  /**
   * URL-friendly version of the title (auto-generated)
   */
  slug: string;
  location: string;
  /**
   * Select the primary category for this excursion
   */
  category: 'beach-islands' | 'adventure' | 'cultural' | 'water-sports' | 'nature' | 'city';
  /**
   * Price in USD per person
   */
  price: number;
  priceInfo?: {
    currency?: ('USD' | 'EUR' | 'DOP') | null;
    /**
     * Discount percentage for children (0-100%)
     */
    childDiscount?: number | null;
    /**
     * Discount percentage for groups of 10+ (0-100%)
     */
    groupDiscount?: number | null;
  };
  /**
   * Detailed description of the excursion
   */
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Brief description for cards and previews (max 200 chars)
   */
  shortDescription?: string | null;
  duration?: {
    hours?: number | null;
    minutes?: number | null;
    /**
     * Human-readable duration (e.g., "Full Day", "8 hours")
     */
    display?: string | null;
  };
  schedule?: {
    departureTime?: string | null;
    returnTime?: string | null;
    daysAvailable?: ('monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday')[] | null;
  };
  /**
   * Languages available for this excursion
   */
  languages: {
    language: 'english' | 'spanish' | 'french' | 'german' | 'italian' | 'portuguese' | 'dutch' | 'russian';
    level?: ('native' | 'fluent' | 'conversational' | 'basic') | null;
    id?: string | null;
  }[];
  transportation: {
    pickup: 'included' | 'extra-cost' | 'meet-location';
    pickupNote?: string | null;
    meetingPoint?: string | null;
  };
  capacity?: {
    /**
     * Minimum number of guests required
     */
    minGuests?: number | null;
    /**
     * Maximum number of guests allowed
     */
    maxGuests?: number | null;
  };
  /**
   * Main featured image for the excursion
   */
  image: number | Media;
  /**
   * Additional images for the gallery
   */
  gallery?:
    | {
        image: number | Media;
        caption?: string | null;
        id?: string | null;
      }[]
    | null;
  inclusions?: {
    /**
     * What's included in the excursion
     */
    included?:
      | {
          item: string;
          id?: string | null;
        }[]
      | null;
    /**
     * What's NOT included
     */
    notIncluded?:
      | {
          item: string;
          id?: string | null;
        }[]
      | null;
  };
  requirements?: {
    ageRestriction?: {
      minAge?: number | null;
      maxAge?: number | null;
    };
    fitnessLevel?: ('easy' | 'moderate' | 'challenging' | 'strenuous') | null;
    whatToBring?:
      | {
          item: string;
          id?: string | null;
        }[]
      | null;
  };
  bookingSettings?: {
    /**
     * Minimum hours in advance to book
     */
    advanceBooking?: number | null;
    cancellationPolicy?: ('24h-free' | '48h-free' | '72h-free' | 'non-refundable' | 'custom') | null;
    customCancellationPolicy?: string | null;
  };
  seo?: {
    metaTitle?: string | null;
    metaDescription?: string | null;
    keywords?: string | null;
  };
  /**
   * Feature this excursion on the homepage
   */
  featured?: boolean | null;
  /**
   * Mark as popular excursion
   */
  popular?: boolean | null;
  /**
   * Make this excursion available for booking
   */
  active?: boolean | null;
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bookings".
 */
export interface Booking {
  id: number;
  fullName: string;
  email: string;
  phone: string;
  excursion: number | Excursion;
  adults: number;
  children: number;
  arrivalDate: string;
  arrivalTime: string;
  message?: string | null;
  status: 'pending' | 'confirmed' | 'cancelled';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'excursions';
        value: number | Excursion;
      } | null)
    | ({
        relationTo: 'bookings';
        value: number | Booking;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  category?: T;
  tags?: T;
  photographer?: T;
  location?: T;
  dateCreated?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        hero?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        gallery?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "excursions_select".
 */
export interface ExcursionsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  location?: T;
  category?: T;
  price?: T;
  priceInfo?:
    | T
    | {
        currency?: T;
        childDiscount?: T;
        groupDiscount?: T;
      };
  description?: T;
  shortDescription?: T;
  duration?:
    | T
    | {
        hours?: T;
        minutes?: T;
        display?: T;
      };
  schedule?:
    | T
    | {
        departureTime?: T;
        returnTime?: T;
        daysAvailable?: T;
      };
  languages?:
    | T
    | {
        language?: T;
        level?: T;
        id?: T;
      };
  transportation?:
    | T
    | {
        pickup?: T;
        pickupNote?: T;
        meetingPoint?: T;
      };
  capacity?:
    | T
    | {
        minGuests?: T;
        maxGuests?: T;
      };
  image?: T;
  gallery?:
    | T
    | {
        image?: T;
        caption?: T;
        id?: T;
      };
  inclusions?:
    | T
    | {
        included?:
          | T
          | {
              item?: T;
              id?: T;
            };
        notIncluded?:
          | T
          | {
              item?: T;
              id?: T;
            };
      };
  requirements?:
    | T
    | {
        ageRestriction?:
          | T
          | {
              minAge?: T;
              maxAge?: T;
            };
        fitnessLevel?: T;
        whatToBring?:
          | T
          | {
              item?: T;
              id?: T;
            };
      };
  bookingSettings?:
    | T
    | {
        advanceBooking?: T;
        cancellationPolicy?: T;
        customCancellationPolicy?: T;
      };
  seo?:
    | T
    | {
        metaTitle?: T;
        metaDescription?: T;
        keywords?: T;
      };
  featured?: T;
  popular?: T;
  active?: T;
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bookings_select".
 */
export interface BookingsSelect<T extends boolean = true> {
  fullName?: T;
  email?: T;
  phone?: T;
  excursion?: T;
  adults?: T;
  children?: T;
  arrivalDate?: T;
  arrivalTime?: T;
  message?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}